// PPPs

usdt:$MMTK:mmtk_ruby:pin_ppp_children {
    if (@enable_print) {
        printf("pin_ppp_children,meta,%d,%lu,%lu,%lu,%lu\n", tid, nsecs, arg0, arg1, arg2);
    }
}

usdt:$MMTK:mmtk_ruby:remove_dead_ppps {
    if (@enable_print) {
        printf("remove_dead_ppps,meta,%d,%lu,%lu,%lu,%lu\n", tid, nsecs, arg0, arg1, arg2);
    }
}

usdt:$MMTK:mmtk_ruby:unpin_ppp_children {
    if (@enable_print) {
        printf("unpin_ppp_children,meta,%d,%lu,%lu\n", tid, nsecs, arg0);
    }
}

// Generic weak table processing

usdt:$MMTK:mmtk_ruby:weak_table_size_change {
    if (@enable_print) {
        printf("weak_table_size_change,meta,%d,%lu,%lu,%lu\n", tid, nsecs, arg0, arg1);
    }
}

// Specific weak table processing work packets

usdt:$MMTK:mmtk_ruby:update_finalizer_and_obj_id_tables {
    if (@enable_print) {
        printf("update_finalizer_and_obj_id_tables,meta,%d,%lu,%lu,%lu,%lu,%lu\n", tid, nsecs, arg0, arg1, arg2, arg3);
    }
}

// Weak concurrent set optimization

usdt:$MMTK:mmtk_ruby:weak_cs_par_init {
    if (@enable_print) {
        printf("weak_cs_par_init,meta,%d,%lu,%lu,%lu,%s\n", tid, nsecs, arg0, arg1, str(arg2, arg3));
    }
}

usdt:$MMTK:mmtk_ruby:weak_cs_par_final {
    if (@enable_print) {
        printf("weak_cs_par_final,meta,%d,%lu,%lu\n", tid, nsecs, arg0);
    }
}

usdt:$MMTK:mmtk_ruby:weak_cs_par_entries_begin {
    if (@enable_print) {
        printf("weak_cs_par_entries_begin,meta,%d,%lu,%lu,%lu,%s\n", tid, nsecs, arg0, arg1, str(arg2, arg3));
    }
}

usdt:$MMTK:mmtk_ruby:weak_cs_par_entries_end {
    if (@enable_print) {
        printf("weak_cs_par_entries_end,meta,%d,%lu,%lu,%lu,%lu\n", tid, nsecs, arg0, arg1, arg2);
    }
}

// Weak st table optimization

usdt:$MMTK:mmtk_ruby:weak_st_par_init {
    if (@enable_print) {
        printf("weak_st_par_init,meta,%d,%lu,%lu,%lu,%lu,%lu,%s\n", tid, nsecs, arg0, arg1, arg2, arg3, str(arg4, arg5));
    }
}

usdt:$MMTK:mmtk_ruby:weak_st_par_final {
    if (@enable_print) {
        printf("weak_st_par_final,meta,%d,%lu,%lu,%s\n", tid, nsecs, arg0, str(arg1, arg2));
    }
}

usdt:$MMTK:mmtk_ruby:weak_st_par_entries {
    if (@enable_print) {
        printf("weak_st_par_entries,meta,%d,%lu,%lu,%lu,%lu,%s\n", tid, nsecs, arg0, arg1, arg2, str(arg3, arg4));
    }
}

usdt:$MMTK:mmtk_ruby:weak_st_par_bins {
    if (@enable_print) {
        printf("weak_st_par_bins,meta,%d,%lu,%lu,%lu,%lu,%s\n", tid, nsecs, arg0, arg1, arg2, str(arg3, arg4));
    }
}

// Other work packets

usdt:$MMTK:mmtk_ruby:process_obj_free_candidates {
    if (@enable_print) {
        printf("process_obj_free_candidates,meta,%d,%lu,%lu,%lu\n", tid, nsecs, arg0, arg1);
    }
}

usdt:$MMTK:mmtk_ruby:update_wb_unprotected_objects_list {
    if (@enable_print) {
        printf("update_wb_unprotected_objects_list,meta,%d,%lu,%lu,%lu\n", tid, nsecs, arg0, arg1);
    }
}

usdt:$MMTK:mmtk_ruby:update_weak_fields {
    if (@enable_print) {
        printf("update_weak_fields,meta,%d,%lu,%lu,%lu,%lu\n", tid, nsecs, arg0, arg1, arg2);
    }
}
